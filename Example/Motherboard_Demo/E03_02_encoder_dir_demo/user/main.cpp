/*********************************************************************************************************************
* LS2K0300 Opensourec Library 即（LS2K0300 开源库）是一个基于官方 SDK 接口的第三方开源库
* Copyright (c) 2022 SEEKFREE 逐飞科技
*
* 本文件是LS2K0300 开源库的一部分
*
* LS2K0300 开源库 是免费软件
* 您可以根据自由软件基金会发布的 GPL（GNU General Public License，即 GNU通用公共许可证）的条款
* 即 GPL 的第3版（即 GPL3.0）或（您选择的）任何后来的版本，重新发布和/或修改它
*
* 本开源库的发布是希望它能发挥作用，但并未对其作任何的保证
* 甚至没有隐含的适销性或适合特定用途的保证
* 更多细节请参见 GPL
*
* 您应该在收到本开源库的同时收到一份 GPL 的副本
* 如果没有，请参阅<https://www.gnu.org/licenses/>
*
* 额外注明：
* 本开源库使用 GPL3.0 开源许可证协议 以上许可申明为译文版本
* 许可申明英文版在 libraries/doc 文件夹下的 GPL3_permission_statement.txt 文件中
* 许可证副本在 libraries 文件夹下 即该文件夹下的 LICENSE 文件
* 欢迎各位使用并传播本程序 但修改内容时必须保留逐飞科技的版权声明（即本声明）
*
* 文件名称          main
* 公司名称          成都逐飞科技有限公司
* 适用平台          LS2K0300
* 店铺链接          https://seekfree.taobao.com/
*
* 修改记录
* 日期              作者           备注
* 2025-02-27        大W            first version
********************************************************************************************************************/
// *************************** 例程硬件连接说明 ***************************
//  久久派与主板使用54pin排线连接，再将久久派插到主板上面，确保插到底核心板与主板插座间没有缝隙即可
//  久久派与主板使用54pin排线连接，再将久久派插到主板上面，确保插到底核心板与主板插座间没有缝隙即可
//  久久派与主板使用54pin排线连接，再将久久派插到主板上面，确保插到底核心板与主板插座间没有缝隙即可
//  使用本历程，就需要使用我们逐飞科技提供的内核。
// 
// 
// 接入方向编码器连接 1
//      模块管脚            单片机管脚
//      LSB                 ENCODER_1_LSB 宏定义的引脚 默认 GPIO64
//      DIR                 ENCODER_1_DIR 宏定义的引脚 默认 GPIO51
//      GND                 核心板电源地 GND
//      3V3                 核心板 3V3 电源
// 
// 接入方向编码器连接 2
//      模块管脚            单片机管脚
//      LSB                 ENCODER_2_LSB 宏定义的引脚 默认 GPIO67
//      DIR                 ENCODER_2_DIR 宏定义的引脚 默认 GPIO50
//      GND                 核心板电源地 GND
//      3V3                 核心板 3V3 电源
//
// *************************** 例程测试说明 ***************************
// 1.核心板烧录本例程 插在主板上 两个方向编码器连接到主板的编码器接口
// 
// 2.打开终端，使用115200波特率
//
// 3.电池供电 上电后会从串口输出编码器采集的转速信息 如下
//      zf_encoder_left = xxx.
//      zf_encoder_right = xxx.
// 
// 4.转动编码器数据会有变化
// 
// 如果发现现象与说明严重不符 请参照本文件最下方 例程常见问题说明 进行排查

// **************************** 代码区域 ****************************
#include "zf_common_headfile.h"


int16 encoder_left;
int16 encoder_right;

#define ENCODER_1           "/dev/zf_encoder_1"
#define ENCODER_2           "/dev/zf_encoder_2"
void pit_callback()
{
    encoder_left  = encoder_get_count(ENCODER_1);
    encoder_right = encoder_get_count(ENCODER_2);
}


int main(int, char**) 
{

    // 创建一个定时器10ms周期，回调函数为pit_callback
    pit_ms_init(10, pit_callback);
 
    while(1)
    {

        printf("zf_encoder_left = %d.\r\n", encoder_left);
        printf("zf_encoder_right = %d.\r\n", encoder_right);

        system_delay_ms(100);
    }
}

// **************************** 代码区域 ****************************

// *************************** 例程常见问题说明 ***************************
// 遇到问题时请按照以下问题检查列表检查
// 
// 问题1：终端提示未找到xxx文件
//      使用本历程，就需要使用我们逐飞科技提供的内核，否则提示xxx文件找不到
//      使用本历程，就需要使用我们逐飞科技提供的内核，否则提示xxx文件找不到
//      使用本历程，就需要使用我们逐飞科技提供的内核，否则提示xxx文件找不到
//
// 问题3：数值一直在正负一跳转
//      不要使用正交解码编码器
//      不要使用正交解码编码器
//      不要使用正交解码编码器
//      不要用手转动编码器
//      不要用手转动编码器
//      不要用手转动编码器
// 
// 问题4：数值不随编码转动变化
//      如果使用主板测试，主板必须要用电池供电
//      检查编码器是否是正常的，线是否松动，编码器是否发热烧了，是否接错线

